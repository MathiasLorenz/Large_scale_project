function data = readPerformanceFromFile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   PERFORMANCE2MIXED1 = IMPORTFILE(FILENAME) Reads data from text file
%   FILENAME for the default selection.
%
%   PERFORMANCE2MIXED1 = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data
%   from rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   performance2mixed1 = importfile('performance-2-mixed_1.dat', 1, 2);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2018/05/27 10:36:45

%% Initialize variables.
if nargin<=2
    startRow = 1;
    endRow = inf;
end

%% Format for each line of text:
%   column1: text (%s)
%	column2: double (%f)
%   column3: text (%s)
%	column4: double (%f)
%   column5: text (%s)
%	column6: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%7s%11f%8s%11f%10s%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Remove white space around all cell columns.
dataArray{1} = strtrim(dataArray{1});
dataArray{3} = strtrim(dataArray{3});
dataArray{5} = strtrim(dataArray{5});

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
dataArray([2, 4, 6]) = cellfun(@(x) num2cell(x), dataArray([2, 4, 6]), 'UniformOutput', false);
dataArray([1, 3, 5]) = cellfun(@(x) mat2cell(x, ones(length(x), 1)), dataArray([1, 3, 5]), 'UniformOutput', false);
data = cell2mat([dataArray{[2 4 6]}]);
